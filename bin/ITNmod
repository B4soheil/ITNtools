#!/bin/bash

CE="\033[0m"
RS="\033[1;31m"
YS="\033[1;33m"
N="\033[1;37m"

if [[ $EUID -ne 0 ]]
then
   sleep 1
   echo -e "["$RS"*"$CE"] "$RS"This script must be run as root!"$CE"" 1>&2
   sleep 1
   exit
fi

{
chattr -i /dev/config
chattr -i /dev/config/config.txt
chattr -i /dev/config/configure.txt
} &> /dev/null

{
mkdir /dev/config
echo 0 >> /dev/config/config.txt
echo 1 >> /dev/config/configure.txt
} &> /dev/null

{
chattr +i /dev/config
chattr +i /dev/config/config.txt
chattr +i /dev/config/configure.txt
} &> /dev/null


{
SERSE="$( cat /dev/config/config.txt | head -n 1 )"
ESRES="$( cat /dev/config/configure.txt | head -n 1 )"
} &> /dev/null

if [[ "$SERSE" != "$ESRES" ]]
then

{
ASESR="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
KEYEK="$( cat /etc/ITNtools/root/service/ITNkey.txt )"
} &> /dev/null

if [[ "$ASESR" = 0 ]]
then 

KEYKE="$( timeout -s SIGTERM 40 curl "https://pastebin.com/raw/k8D7RBtC" 2>/dev/null )"

if [[ "$KEYEK" != "$KEYKE" ]]
then

sleep 1
echo -e "["$RS"*"$CE"] "$RS"Failed to open session for ITNmod!"$CE""

sleep 1
exit

fi

else
sleep 1
echo -e "["$RS"*"$CE"] "$RS"No Internet connection!"$CE""
sleep 1
exit
fi
fi

if [[ $1 = "--help" || $1 = "-h" ]]
then
echo -e "Usage: ITNmod [option] <arguments>"
echo -e
echo -e "  -i, --install         Install ITNtools modules."
echo -e "  -t, --take    <name>  Take a new ITNtools modules snapshot."
echo -e "  -r, --restore <name>  Restore saved ITNtools modules snapshot."
echo -e "  -d, --delete  <name>  Delete saved ITNtools modules snapshot."
echo -e "  -u, --uninstall       Uninstall ITNtools modules."
echo -e "  -h, --help            Give this help list."
exit

elif [[ $1 = "--restore" || $1 = "-r" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: ITNmod $1 <name>"
exit
fi
if [[ -d /etc/ITNtools/modules ]]
then
if [[ ! -d /etc/ITNtools/modules/snapshots ]]
then
sleep 2
echo -e "Error, snapshots directory is not found!"
sleep 2
echo -e "Making /etc/ITNtools/modules/snapshots..."
{
chattr -i /etc/ITNtools
mkdir /etc/ITNtools/modules/snapshots
chattr +i /etc/ITNtools
}
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
fi
if [[ -d /etc/ITNtools/modules/snapshots/$2 ]]
then
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to restore snapshot:\033[0m $2"
sleep 1
printf '\033]2;Restoring...\a'

function ProgressBark {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rRestoring (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBark ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
{
chatt -i /etc/ITNtools
rm -r /etc/ITNtools/modules/ITN
ITN-r /etc/ITNtools/modules/snapshots/$2/ITN ITNc/ITNtools/modules
chmod +x /etc/ITNtools/modules/ITN/ITN1
chmod +x /etc/ITNtools/modules/ITN/ITN2
chmod +x /etc/ITNtools/modules/ITN/ITN3
chmod +x /etc/ITNtools/modules/ITN/ITN31
chmod +x /etc/ITNtools/modules/ITN/ITN21
chmod +x /etc/ITNtools/modules/ITN/ITN4
chmod +x /etc/ITNtools/modules/ITN/ITN41
chmod +x /etc/ITNtools/modules/ITN/ITN42
chmod +x /etc/ITNtools/modules/ITN/ITN43
chattr +i /etc/ITNtools
} &> /dev/null
sleep 2
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
else
sleep 2
echo -e "Error, snapshot $2 is not found!"
sleep 2
exit
fi
else
sleep 2
echo -e "Error, ITNtools modules is not installed!"
sleep 2
exit
fi

elif [[ $1 = "--delete" || $1 = "-d" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: ITNmod $1 <name>"
exit
fi
if [[ -d /etc/ITNtools/modules ]]
then
if [[ ! -d /etc/ITNtools/modules/snapshots ]]
then
sleep 2
echo -e "Error, snapshots directory is not found!"
sleep 2
echo -e "Making /etc/ITNtools/modules/snapshots..."
{
chattr -i /etc/ITNtools
mkdir /etc/ITNtools/modules/snapshots
chattr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
fi
if [[ -d /etc/ITNtools/modules/snapshots/$2 ]]
then
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to delete snapshot:\033[0m $2"
sleep 1
printf '\033]2;Deleting...\a'

function ProgressBarkt {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rDeleting (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarkt ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
{
chattr -i /etc/ITNtools
rm -rf /etc/ITNtools/modules/snapshots/$2
chattr +i /etc/ITNtools
} &> /dev/null
sleep 2
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
else
sleep 2
echo -e "Error, snapshot $2 is not found!"
sleep 2
exit
fi
else
sleep 2
echo -e "Error, ITNtools modules is not installed!"
sleep 2
exit
fi

elif [[ $1 = "--take" || $1 = "-t" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: ITNmod $1 <name>"
exit
fi
if [[ -d /etc/ITNtools/modules ]]
then
if [[ ! -d /etc/ITNtools/modules/snapshots ]]
then
sleep 2
echo -e "Error, snapshots directory is not found!"
sleep 2
echo -e "Making /etc/ITNtools/modules/snapshots..."
{
chattr -i /etc/ITNtools
mkdir /etc/ITNtools/modules/snapshots
chattr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
fi
if [[ -d /etc/ITNtools/modules/snapshots/$2 ]]
then
sleep 2
echo -e "Error, snapshot $2 is already taken!"
sleep 2
exit
else
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to take snapshot:\033[0m $2"
sleep 1
printf '\033]2;Taking...\a'

function ProgressBarks {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rTaking (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarks ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
echo -e "Making /etc/ITNtools/modules/snapshots/$2..."
{
chattr -i /etc/ITNtools
mkdir /etc/ITNtools/modules/snapshots/$2
chattr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "Trying to take snapshot of /etc/ITNtools/modules/ITN.ITN
{
chattr -i /etc/ITNtools
cp -r /etc/ITNtools/modules/ITN ITNc/ITNtools/modules/snapshots/$2
chmod +t /etc/ITNtools/modules/snapshots
chattr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Snapshot: \033[4;32m/etc/ITNtools/modules/snapshots/$2/ITN\ITN[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
fi
else
sleep 2
echo -e "Error, ITNtools modules is not installed!"
sleep 2
exit
fi

elif [[ $1 = "--uninstall" || $1 = "-u" ]]
then
if [[ -d /etc/ITNtools/modules ]]
then
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\033[4;32mPreparing to uninstall\033[0m"
sleep 1
printf '\033]2;Uninstalling...\a'

function ProgressBarkty {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rUninstalling (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBarkty ${number} ${_end}
done

sleep 5
echo -e
sleep 0.3
{
chattr -i /etc/ITNtools
rm -rf /etc/ITNtools/modules
chattr +i /etc/ITNtools
} &> /dev/null
sleep 2
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
else
sleep 2
echo -e "Error, ITNtools modules is not installed!"
sleep 2
exit
fi


elif [[ $1 = "--install" || $1 = "-i" ]]
then
if [[ -d /etc/ITNtools/modules ]]
then
sleep 2
echo -e "Error, ITNtools modules is already installed!"
sleep 2
exit
fi
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "Making /etc/ITNtools/modules..."
{
chattr -i /etc/ITNtools
mkdir /etc/ITNtools/modules
mkdir /etc/ITNtools/modules/ITN
ITNttr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mPreparing to install...\033[0m"
sleep 1
printf '\033]2;Installing...\a'

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rInstalling (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

sleep 5
echo -e
sleep 0.3
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
chmod +x /root/ITNtools/ITN/ITN1
chmod +x /root/ITNtools/ITN/ITN2
chmod +x /root/ITNtools/ITN/ITN3
chmod +x /root/ITNtools/ITN/ITN21
chmod +x /root/ITNtools/ITN/ITN31
chmod +x /root/ITNtools/ITN/ITN4
chmod +x /root/ITNtools/ITN/ITN41
chmod +x /root/ITNtools/ITN/ITN42
chmod +x /root/ITNtools/ITN/ITN43
sleep 0.5 
echo -e "Setting up permissions..."
sleep 0.5
echo -e "Moving ITNtools modules to /etc/ITNtools/modules/ITN.ITN
sleep 0.5
{
chattr -i /etc/ITNtools
cp /root/ITNtools/ITN/ITN1 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN2 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN3 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN21 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN31 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN4 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN41 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN42 /etc/ITNtools/modules/ITN
ITN/root/ITNtools/ITN/ITN43 /etc/ITNtools/modules/ITN
ITNod +x /etc/ITNtools/modules/ITN/ITN1
chmod +x /etc/ITNtools/modules/ITN/ITN2
chmod +x /etc/ITNtools/modules/ITN/ITN3
chmod +x /etc/ITNtools/modules/ITN/ITN21
chmod +x /etc/ITNtools/modules/ITN/ITN31
chmod +x /etc/ITNtools/modules/ITN/ITN4
chmod +x /etc/ITNtools/modules/ITN/ITN41
chmod +x /etc/ITNtools/modules/ITN/ITN42
chmod +x /etc/ITNtools/modules/ITN/ITN43
chattr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "ITNtools modules moved to /etc/ITNtools/modules/ITN ITNh success!"
sleep 1
echo -e "Cleaning caches..."
sleep 3
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Saving to /etc/ITNtools/modules/.config..."
echo ITN1 >> /etc/ITNtools/modules/.config
echo ITN2 >> /etc/ITNtools/modules/.config
echo ITN3 >> /etc/ITNtools/modules/.config
echo ITN21 >> /etc/ITNtools/modules/.config
echo ITN31 >> /etc/ITNtools/modules/.config
sleep 0.5
echo -e "Saved to /etc/ITNtools/modules/.config..."
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 3
echo -e "\033[4;32mPreparing to take snapshot:\033[0m default_snapshot"
sleep 1
echo -e "Making /etc/ITNtools/modules/snapshots..."
mkdir /etc/ITNtools/modules/snapshots
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 1
printf '\033]2;Taking...\a'

function ProgressBarksa {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rTaking (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarksa ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
echo -e "Making /etc/ITNtools/modules/snapshots/default_snapshot..."
{
chattr -i /etc/ITNtools
mkdir /etc/ITNtools/modules/snapshots/default_snapshot
chattr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "Trying to take snapshot of /etc/ITNtools/modules/ITN.ITN
{
chattr -i /etc/ITNtools
cp -r /etc/ITNtools/modules/ITN ITNc/ITNtools/modules/snapshots/default_snapshot
chmod +t /etc/ITNtools/modules/snapshots
chattr +i /etc/ITNtools
} &> /dev/null
sleep 0.5
echo -e "\033[4;32mSuccess!\033[0m"
sleep 0.5
echo -e "Snapshot: \033[4;32m/etc/ITNtools/modules/snapshots/dafault_snapshot/ITN\ITN[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
fi

echo -e "Usage: ITNmod [option] <arguments>"
echo -e
echo -e "  -i, --install         Install ITNtools modules."
echo -e "  -t, --take    <name>  Take a new ITNtools modules snapshot."
echo -e "  -r, --restore <name>  Restore saved ITNtools modules snapshot."
echo -e "  -d, --delete  <name>  Delete saved ITNtools modules snapshot."
echo -e "  -u, --uninstall       Uninstall ITNtools modules."
echo -e "  -h, --help            Give this help list."
exit
